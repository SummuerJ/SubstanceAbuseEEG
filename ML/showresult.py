import numpy as np
import matplotlib.pyplot as plt




#
test_list = [5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 57]
#
feature_rank_refer = ['delta', 'theta', 'alpha', 'beta', 'gamma', 'beta_l', 'beta_m', 'beta_h', 'total_psd',
                      'hjorth_activity', 'hjorth_mobility', 'hjorth_complexity',
                      'bin_entropy', 'appro_entropy',
                      'DET', 'LAM',
                      'de_delta', 'de_theta', 'de_alpha', 'de_beta', 'de_gamma', 'de_beta_l', 'de_beta_m', 'de_beta_h', 'de_total_psd',
                      'sta_mean', 'sta_var', 'sta_cov', 'sta_max',
                      'peak', 'abs_sum', 'diff_statis', 'auto_co', 'c3', 'adf', 'complexity', 'line', 'fly', 'fly_change', 'cwt',
                      're_delta', 're_theta', 're_alpha', 're_beta', 're_gamma',
                      'c_delta', 'c_theta', 'c_alpha', 'c_beta', 'c_gamma', 'c_allband',
                      'bw_delta', 'bw_theta', 'bw_alpha', 'bw_beta', 'bw_gamma', 'bw_allband']
MIQ_LIST = ['abs_sum', 'de_delta', 'bw_alpha', 'bw_allband', 'c_beta', 'complexity', 'bw_beta', 'c_allband', 'c_gamma', 'line', 'sta_max', 'bw_gamma', 'bw_theta', 'c_delta', 'de_alpha', 'peak', 'bw_delta', 'fly_change', 'de_total_psd', 'hjorth_complexity', 'de_beta_l', 'appro_entropy', 'c_theta', 'de_beta_h', 'de_gamma', 'c_alpha', 'de_theta', 'de_beta', 'de_beta_m', 'fly', 'bin_entropy', 're_alpha', 're_beta', 're_delta', 're_gamma', 'beta', 'alpha', 'auto_co', 're_theta', 'total_psd', 'beta_h', 'DET', 'sta_mean', 'sta_cov', 'LAM', 'theta', 'hjorth_mobility', 'sta_var', 'cwt', 'adf', 'hjorth_activity', 'beta_l', 'gamma', 'c3', 'beta_m', 'diff_statis', 'delta']
MID_LIST = ['abs_sum', 're_alpha', 're_beta', 'de_delta', 'bw_alpha', 'bw_allband', 're_delta', 're_gamma', 'c_beta', 'complexity', 'beta', 'alpha', 'auto_co', 're_theta', 'bw_beta', 'total_psd', 'c_allband', 'beta_h', 'DET', 'sta_mean', 'c_gamma', 'line', 'sta_max', 'sta_cov', 'LAM', 'theta', 'bw_gamma', 'hjorth_mobility', 'sta_var', 'cwt', 'adf', 'hjorth_activity', 'beta_l', 'gamma', 'c3', 'beta_m', 'bw_theta', 'c_delta', 'diff_statis', 'delta', 'peak', 'de_alpha', 'bw_delta', 'bin_entropy', 'c_theta', 'appro_entropy', 'de_beta_l', 'hjorth_complexity', 'fly_change', 'c_alpha', 'de_total_psd', 'fly', 'de_beta_h', 'de_theta', 'de_beta_m', 'de_gamma', 'de_beta']
feature_importances = ['DET', 'complexity', 'abs_sum', 'de_beta_l', 'appro_entropy', 'gamma', 'LAM', 're_delta', 'delta', 'diff_statis', 'beta_l', 're_theta', 'hjorth_complexity', 'de_beta_m', 'theta', 'hjorth_mobility', 'c_allband', 're_gamma', 'alpha', 'de_gamma', 'de_theta', 'beta_m', 'c_beta', 'de_alpha', 're_alpha', 'de_beta_h', 'de_beta', 'sta_var', 'de_delta', 'sta_cov', 'beta', 'de_total_psd', 'auto_co', 'total_psd', 'bw_allband', 'sta_max', 'peak', 're_beta', 'bw_alpha', 'bw_theta', 'hjorth_activity', 'beta_h', 'c_alpha', 'c_theta', 'sta_mean', 'fly', 'bw_beta', 'line', 'c_delta', 'bin_entropy', 'bw_gamma', 'bw_delta', 'c_gamma', 'cwt', 'fly_change', 'c3', 'adf']
MIC = ['DET', 'LAM', 'abs_sum', 'adf', 'alpha', 'appro_entropy', 'auto_co', 'beta', 'beta_h', 'beta_l', 'beta_m', 'bin_entropy', 'bw_allband', 'bw_alpha', 'bw_beta', 'bw_delta', 'bw_gamma', 'bw_theta', 'c3', 'c_allband', 'c_alpha', 'c_beta', 'c_delta', 'c_gamma', 'c_theta', 'complexity', 'cwt', 'de_alpha', 'de_beta', 'de_beta_h', 'de_beta_l', 'de_beta_m', 'de_delta', 'de_gamma', 'de_theta', 'de_total_psd', 'delta', 'diff_statis', 'fly', 'fly_change', 'gamma', 'hjorth_activity', 'hjorth_complexity', 'hjorth_mobility', 'line', 'peak', 're_alpha', 're_beta', 're_delta', 're_gamma', 're_theta', 'sta_cov', 'sta_max', 'sta_mean', 'sta_var', 'theta', 'total_psd']

# old rank
knn_old_y = [0.88939566704675, 0.903078677309008, 0.915621436716078, 0.921322690992018, 0.914481185860889, 0.917901938426454, 0.923603192702394, 0.923603192702394, 0.922462941847206, 0.924743443557582, 0.913340935005701, 0.921322690992018]
rf_old_y = [0.870011402508552, 0.88939566704675, 0.897377423033067, 0.898517673888255,0.904218928164196,0.892816419612315,0.900798175598632,0.896237172177879,0.898517673888255,0.903078677309008,0.903078677309008,0.900798175598632]
lr_old_y = [0.561003420752566, 0.828962371721779, 0.844925883694413, 0.882554161915621,0.897377423033067,0.893956670467503,0.895096921322691,0.897377423033067,0.897377423033067,0.900798175598632,0.908779931584949,0.906499429874572]
sgd_old_y = [0.598631698973774, 0.808437856328392, 0.784492588369441, 0.851767388825542,0.85860889395667,0.851767388825542,0.817559863169897,0.864310148232611,0.820980615735462,0.82212086659065,0.855188141391106,0.860889395667047]
svm_old_y = [0.827822120866591, 0.897377423033067, 0.911060433295325, 0.919042189281642,0.924743443557582,0.913340935005701,0.916761687571266,0.92018244013683,0.917901938426454,0.900798175598632,0.891676168757127,0.879133409350057]


# ########old############
plt.figure(12)
plt.subplot(221)
plt.title("Linear Models")
plt.ylabel("Accuarcy")
plt.xlabel("Features Number")
plt.ylim([0.5, 1.000])
plt.plot(test_list, lr_old_y, marker='v', mec='g', mfc='g', ms=10, label='LR', color='g', linestyle='-')
plt.plot(test_list, sgd_old_y, marker='+', mec='m', mfc='m', ms=10, label='SGD', color='m', linestyle='-.')
plt.legend(loc="lower right")  # 设置图例位置

plt.subplot(222)
plt.title("Non-Linear Models")
plt.ylim([0.5, 1.000])
plt.plot(test_list, knn_old_y, marker='o', mec='r', mfc='r', ms=10, label='kNN', color='r', linestyle='-')
plt.plot(test_list, svm_old_y, marker='*', mec='k', mfc='w', ms=10, label='SVM', color='k', linestyle='-.')
plt.legend(loc="lower right")  # 设置图例位置

plt.subplot(223)
plt.title("Trees")
plt.ylabel("Accuarcy")
plt.xlabel("Features Number")
plt.ylim([0.5, 1.000])
plt.plot(test_list, rf_old_y, marker='s', mec='b', mfc='b', ms=10, label='RF', color='b', linestyle='-.')
plt.legend(loc="lower right")  # 设置图例位置
# plt.legend(loc="best")  # 设置图例位置
# 指定xy轴 名称

# 设置x/y轴尺度

# 保存图像 默认png格式，其中dpi指图片质量
# plt.savefig(".png", dpi=600)
plt.show()

# MIQ
knn_miq_y = [0.808437856328392,0.835803876852908,0.839224629418472,0.842645381984037,0.873432155074116,0.90193842645382,0.90193842645382,0.921322690992018,0.919042189281642,0.914481185860889,0.92018244013683,0.921322690992018]
rf_miq_y =[0.843785632839225,0.843785632839225,0.85860889395667,0.850627137970353,0.875712656784493,0.88369441277081,0.877993158494869,0.890535917901938,0.890535917901938,0.896237172177879,0.903078677309008,0.899657924743443]
lr_miq_y =[0.77309007981756,0.781071835803877,0.817559863169897,0.84036488027366,0.848346636259977,0.868871151653364,0.875712656784493,0.88369441277081,0.885974914481186,0.887115165336374,0.905359179019384,0.906499429874572,]
sgd_miq_y =[0.753705815279361,0.750285062713797,0.806157354618016,0.826681870011402,0.823261117445838,0.841505131128848,0.833523375142531,0.828962371721779,0.851767388825542,0.851767388825542,0.806157354618016,0.795895096921323]
svm_miq_y =[0.783352337514253,0.797035347776511,0.817559863169897,0.833523375142531,0.881413911060433,0.896237172177879,0.895096921322691,0.892816419612315,0.891676168757127,0.885974914481186,0.880273660205245,0.879133409350057]

# MID
knn_mid_y =[0.855188141391106,0.880273660205245,0.893956670467503,0.892816419612315,0.891676168757127,0.898517673888255,0.908779931584949,0.911060433295325,0.909920182440137,0.915621436716078,0.922462941847206,0.921322690992018,]
rf_mid_y =[0.850627137970353,0.874572405929304,0.887115165336374,0.88369441277081,0.891676168757127,0.881413911060433,0.900798175598632,0.897377423033067,0.904218928164196,0.893956670467503,0.90193842645382,0.900798175598632]
lr_mid_y =[0.789053591790194,0.812998859749145,0.84036488027366,0.834663625997719,0.836944127708096,0.835803876852908,0.850627137970353,0.881413911060433,0.88369441277081,0.897377423033067,0.908779931584949,0.906499429874572]
sgd_mid_y =[0.768529076396807,0.757126567844926,0.787913340935006,0.807297605473204,0.80957810718358,0.814139110604333,0.824401368301026,0.815279361459521,0.857468643101482,0.842645381984037,0.859749144811859,0.867730900798176]
svm_mid_y =[0.834663625997719,0.888255416191562,0.892816419612315,0.88939566704675,0.882554161915621,0.880273660205245,0.891676168757127,0.895096921322691,0.888255416191562,0.88939566704675,0.879133409350057,0.879133409350057]

# TREE
knn_tree_y =[0.890535917901938,0.900798175598632,0.911060433295325,0.914481185860889,0.92018244013683,0.915621436716078,0.927023945267959,0.917901938426454,0.925883694412771,0.922462941847206,0.92018244013683,0.921322690992018]
rf_tree_y =[0.859749144811859,0.887115165336374,0.895096921322691,0.897377423033067,0.895096921322691,0.900798175598632,0.900798175598632,0.900798175598632,0.900798175598632,0.90193842645382,0.90193842645382,0.90193842645382]
lr_tree_y =[0.647662485746864,0.661345496009122,0.833523375142531,0.831242873432155,0.885974914481186,0.885974914481186,0.899657924743443,0.903078677309008,0.900798175598632,0.906499429874572,0.906499429874572,0.906499429874572]
sgd_tree_y =[0.734321550741163,0.660205245153934,0.79133409350057,0.728620296465222,0.841505131128848,0.855188141391106,0.833523375142531,0.848346636259977,0.8449258836944130,0.838084378563284,0.866590649942988,0.849486887115165]
svm_tree_y =[0.828962371721779,0.874572405929304,0.92018244013683,0.925883694412771,0.917901938426454,0.922462941847206,0.921322690992018,0.923603192702394,0.916761687571266,0.90193842645382,0.879133409350057,0.879133409350057]

# MIC
knn_mic_y =[0.824401368301026,0.90763968072976,0.893956670467503,0.88369441277081,0.874572405929304,0.884834663625998,0.909920182440137,0.909920182440137,0.90763968072976,0.909920182440137,0.919042189281642,0.921322690992018]
rf_mic_y =[0.841505131128848,0.870011402508552,0.87115165336374,0.865450399087799,0.868871151653364,0.870011402508552,0.891676168757127,0.891676168757127,0.890535917901938,0.890535917901938,0.900798175598632,0.905359179019384]
lr_mic_y =[0.596351197263398,0.785632839224629,0.84036488027366,0.854047890535918,0.850627137970353,0.875712656784493,0.88939566704675,0.905359179019384,0.905359179019384,0.908779931584949,0.905359179019384,0.906499429874572]
sgd_mic_y =[0.594070695553022,0.72405929304447,0.799315849486887,0.817559863169897,0.801596351197263,0.823261117445838,0.862029646522235,0.859749144811859,0.854047890535918,0.839224629418472,0.855188141391106,0.873432155074116]
svm_mic_y =[0.770809578107184,0.860889395667047,0.876852907639681,0.867730900798176,0.855188141391106,0.864310148232611,0.887115165336374,0.888255416191562,0.88939566704675,0.88369441277081,0.882554161915621,0.879133409350057]

knn_lis = [knn_miq_y, knn_mid_y, knn_tree_y, knn_mic_y, knn_old_y]
rf_lis = [rf_miq_y, rf_mid_y, rf_tree_y, rf_mic_y, rf_old_y]
lr_lis = [lr_miq_y, lr_mid_y, lr_tree_y, lr_mic_y, lr_old_y]
sgd_lis = [sgd_miq_y, sgd_mid_y, sgd_tree_y, sgd_mic_y, sgd_old_y]
svm_lis = [svm_miq_y, svm_mid_y, svm_tree_y, svm_mic_y, svm_old_y]

plt.title("Features Fliter of kNN ")
plt.ylabel("Accuarcy")
plt.xlabel("Features Number")
plt.ylim([0.5, 1.000])
plt.grid(axis="y")
plt.grid(axis="x")
plt.plot(test_list, knn_lis[0], marker='o', mec='r', mfc='r', ms=7, label='MIQ', color='r', linestyle='-')
plt.plot(test_list, knn_lis[1], marker='s', mec='b', mfc='b', ms=7, label='MID', color='b', linestyle=':')
plt.plot(test_list, knn_lis[2], marker='*', mec='y', mfc='y', ms=7, label='TREE', color='y', linestyle='--')
plt.plot(test_list, knn_lis[3], marker='^', mec='g', mfc='g', ms=7, label='MIC', color='g', linestyle='-.')
plt.plot(test_list, knn_lis[4], marker='x', mec='k', mfc='k', ms=7, label='EXP', color='k', linestyle='-')
plt.legend(loc="lower right")  # 设置图例位置
plt.show()

plt.title("Features Fliter of Random Forest ")
plt.ylabel("Accuarcy")
plt.xlabel("Features Number")
plt.ylim([0.5, 1.000])
plt.grid(axis="y")
plt.grid(axis="x")
plt.plot(test_list, rf_lis[0], marker='o', mec='r', mfc='r', ms=7, label='MIQ', color='r', linestyle='-')
plt.plot(test_list, rf_lis[1], marker='s', mec='b', mfc='b', ms=7, label='MID', color='b', linestyle=':')
plt.plot(test_list, rf_lis[2], marker='*', mec='y', mfc='y', ms=7, label='TREE', color='y', linestyle='--')
plt.plot(test_list, rf_lis[3], marker='^', mec='g', mfc='g', ms=7, label='MIC', color='g', linestyle='-.')
plt.plot(test_list, rf_lis[4], marker='x', mec='k', mfc='k', ms=7, label='EXP', color='k', linestyle='-')
plt.legend(loc="lower right")  # 设置图例位置
plt.show()

plt.title("Features Fliter of Logistic Regression ")
plt.ylabel("Accuarcy")
plt.xlabel("Features Number")
plt.ylim([0.5, 1.000])
plt.grid(axis="y")
plt.grid(axis="x")
plt.plot(test_list, lr_lis[0], marker='o', mec='r', mfc='r', ms=7, label='MIQ', color='r', linestyle='-')
plt.plot(test_list, lr_lis[1], marker='s', mec='b', mfc='b', ms=7, label='MID', color='b', linestyle=':')
plt.plot(test_list, lr_lis[2], marker='*', mec='y', mfc='y', ms=7, label='TREE', color='y', linestyle='--')
plt.plot(test_list, lr_lis[3], marker='^', mec='g', mfc='g', ms=7, label='MIC', color='g', linestyle='-.')
plt.plot(test_list, lr_lis[4], marker='x', mec='k', mfc='k', ms=7, label='EXP', color='k', linestyle='-')
plt.legend(loc="lower right")  # 设置图例位置
plt.show()

plt.title("Features Fliter of Stochastic Gradient Descent")
plt.ylabel("Accuarcy")
plt.xlabel("Features Number")
plt.ylim([0.5, 1.000])
plt.grid(axis="y")
plt.grid(axis="x")
plt.plot(test_list, sgd_lis[0], marker='o', mec='r', mfc='r', ms=7, label='MIQ', color='r', linestyle='-')
plt.plot(test_list, sgd_lis[1], marker='s', mec='b', mfc='b', ms=7, label='MID', color='b', linestyle=':')
plt.plot(test_list, sgd_lis[2], marker='*', mec='y', mfc='y', ms=7, label='TREE', color='y', linestyle='--')
plt.plot(test_list, sgd_lis[3], marker='^', mec='g', mfc='g', ms=7, label='MIC', color='g', linestyle='-.')
plt.plot(test_list, sgd_lis[4], marker='x', mec='k', mfc='k', ms=7, label='EXP', color='k', linestyle='-')
plt.legend(loc="lower right")  # 设置图例位置
plt.show()

plt.title("Features Fliter of Support Vector Machine")
plt.ylabel("Accuarcy")
plt.xlabel("Features Number")
plt.ylim([0.5, 1.000])
plt.grid(axis="y")
plt.grid(axis="x")
plt.plot(test_list, svm_lis[0], marker='o', mec='r', mfc='r', ms=7, label='MIQ', color='r', linestyle='-')
plt.plot(test_list, svm_lis[1], marker='s', mec='b', mfc='b', ms=7, label='MID', color='b', linestyle=':')
plt.plot(test_list, svm_lis[2], marker='*', mec='y', mfc='y', ms=7, label='TREE', color='y', linestyle='--')
plt.plot(test_list, svm_lis[3], marker='^', mec='g', mfc='g', ms=7, label='MIC', color='g', linestyle='-.')
plt.plot(test_list, svm_lis[4], marker='x', mec='k', mfc='k', ms=7, label='EXP', color='k', linestyle='-')
plt.legend(loc="lower right")  # 设置图例位置
plt.show()



########################################################
# RF
########################################################



rf_rf_list = [
0.882554161915621,
0.874572405929304,
0.882554161915621,
0.87115165336374,
0.884834663625998,
0.885974914481186,
0.890535917901938,
0.892816419612315,
0.891676168757127,
0.895096921322691,
0.891676168757127,
0.900798175598632,
0.891676168757127,
0.90193842645382,
0.897377423033067,
0.895096921322691,
0.900798175598632,
0.905359179019384,
0.905359179019384,
0.905359179019384,
0.899657924743443,
0.898517673888255,
0.90763968072976,
0.888255416191562,
0.90193842645382,
0.905359179019384,
0.908779931584949,
0.900798175598632,
0.900798175598632,
0.911060433295325,
0.912200684150513,
0.903078677309008,
0.899657924743443,
0.904218928164196,
0.904218928164196,
0.905359179019384,
0.898517673888255,
0.900798175598632,
0.896237172177879,
0.90193842645382,
0.899657924743443,
0.895096921322691,
0.900798175598632,
0.906499429874572,
0.909920182440137,
0.903078677309008,
0.906499429874572,
0.900798175598632,
0.891676168757127

]
svm_rf_list = [
0.896237172177879,
0.90193842645382,
0.895096921322691,
0.893956670467503,
0.904218928164196,
0.92018244013683,
0.916761687571266,
0.922462941847206,
0.922462941847206,
0.92018244013683,
0.921322690992018,
0.927023945267959,
0.924743443557582,
0.923603192702394,
0.924743443557582,
0.92018244013683,
0.927023945267959,
0.925883694412771,
0.924743443557582,
0.935005701254276,
0.929304446978335,
0.928164196123147,
0.929304446978335,
0.931584948688712,
0.931584948688712,
0.936145952109464,
0.936145952109464,
0.937286202964652,
0.933865450399087,
0.933865450399087,
0.929304446978335,
0.930444697833523,
0.930444697833523,
0.930444697833523,
0.931584948688712,
0.925883694412771,
0.929304446978335,
0.927023945267959,
0.919042189281642,
0.92018244013683,
0.922462941847206,
0.917901938426454,
0.922462941847206,
0.915621436716078,
0.917901938426454,
0.917901938426454,
0.919042189281642,
0.921322690992018,
0.921322690992018

]

knn_rf_list = [
0.891676168757127,
0.891676168757127,
0.897377423033067,
0.891676168757127,
0.899657924743443,
0.896237172177879,
0.908779931584949,
0.90193842645382,
0.900798175598632,
0.906499429874572,
0.90193842645382,
0.905359179019384,
0.90193842645382,
0.90763968072976,
0.900798175598632,
0.904218928164196,
0.898517673888255,
0.896237172177879,
0.909920182440137,
0.90763968072976,
0.90763968072976,
0.904218928164196,
0.911060433295325,
0.911060433295325,
0.90763968072976,
0.913340935005701,
0.909920182440137,
0.912200684150513,
0.924743443557582,
0.914481185860889,
0.915621436716078,
0.922462941847206,
0.921322690992018,
0.921322690992018,
0.923603192702394,
0.917901938426454,
0.922462941847206,
0.915621436716078,
0.919042189281642,
0.919042189281642,
0.912200684150513,
0.914481185860889,
0.922462941847206,
0.92018244013683,
0.913340935005701,
0.921322690992018,
0.911060433295325,
0.903078677309008,
0.903078677309008

]

rf_old_list = [
0.90763968072976,
0.90193842645382,
0.90763968072976,
0.931584948688712,
0.93842645381984,
0.933865450399087,
0.922462941847206,
0.922462941847206,
0.9327251995439,
0.931584948688712,
0.929304446978335,
0.919042189281642,
0.927023945267959,
0.917901938426454,
0.931584948688712,
0.927023945267959,
0.93842645381984,
0.928164196123147,
0.937286202964652,
0.925883694412771,
0.927023945267959,
0.930444697833523,
0.925883694412771,
0.928164196123147,
0.931584948688712,
0.931584948688712,
0.931584948688712,
0.93842645381984,
0.930444697833523,
0.9327251995439,
0.925883694412771,
0.922462941847206,
0.931584948688712,
0.928164196123147,
0.925883694412771,
0.931584948688712,
0.930444697833523,
0.928164196123147,
0.9327251995439,
0.930444697833523,
0.9327251995439,
0.930444697833523,
0.931584948688712,
0.924743443557582,
0.9327251995439,
0.930444697833523,
0.924743443557582,
0.927023945267959,
0.928164196123147

]

svm_old_list = [
0.897377423033067,
0.897377423033067,
0.908779931584949,
0.923603192702394,
0.922462941847206,
0.921322690992018,
0.924743443557582,
0.923603192702394,
0.923603192702394,
0.919042189281642,
0.925883694412771,
0.923603192702394,
0.92018244013683,
0.923603192702394,
0.925883694412771,
0.924743443557582,
0.925883694412771,
0.928164196123147,
0.928164196123147,
0.929304446978335,
0.922462941847206,
0.923603192702394,
0.921322690992018,
0.927023945267959,
0.930444697833523,
0.935005701254276,
0.935005701254276,
0.935005701254276,
0.931584948688712,
0.924743443557582,
0.928164196123147,
0.921322690992018,
0.924743443557582,
0.924743443557582,
0.928164196123147,
0.921322690992018,
0.921322690992018,
0.921322690992018,
0.921322690992018,
0.930444697833523,
0.927023945267959,
0.925883694412771,
0.924743443557582,
0.917901938426454,
0.913340935005701,
0.92018244013683,
0.919042189281642,
0.92018244013683,
0.915621436716078

]

knn_old_list = [
0.90193842645382,
0.903078677309008,
0.903078677309008,
0.916761687571266,
0.915621436716078,
0.904218928164196,
0.916761687571266,
0.921322690992018,
0.922462941847206,
0.906499429874572,
0.914481185860889,
0.914481185860889,
0.915621436716078,
0.915621436716078,
0.908779931584949,
0.913340935005701,
0.914481185860889,
0.914481185860889,
0.922462941847206,
0.923603192702394,
0.925883694412771,
0.925883694412771,
0.928164196123147,
0.928164196123147,
0.928164196123147,
0.925883694412771,
0.925883694412771,
0.925883694412771,
0.925883694412771,
0.92018244013683,
0.921322690992018,
0.92018244013683,
0.913340935005701,
0.916761687571266,
0.92018244013683,
0.923603192702394,
0.922462941847206,
0.921322690992018,
0.913340935005701,
0.915621436716078,
0.908779931584949,
0.923603192702394,
0.916761687571266,
0.919042189281642,
0.912200684150513,
0.914481185860889,
0.909920182440137,
0.913340935005701,
0.911060433295325

]

c_list = [i for i in range(8, 57)]
plt.title("Features Fliter Task")
plt.ylabel("Accuarcy")
plt.xlabel("Features Number")
plt.ylim([0.8, 1.000])
plt.grid(axis="y")
plt.grid(axis="x")
plt.plot(c_list, rf_rf_list, marker='o', mec='r', mfc='w', ms=7, label='RF-TREE', color='r', linestyle='-')
plt.plot(c_list, svm_rf_list, marker='s', mec='b', mfc='w', ms=7, label='SVM-TREE', color='b', linestyle=':')
plt.plot(c_list, knn_rf_list, marker='*', mec='y', mfc='y', ms=7, label='kNN-TREE', color='y', linestyle='--')
plt.plot(c_list, rf_old_list, marker='^', mec='g', mfc='w', ms=7, label='RF-EXP', color='g', linestyle='-.')
plt.plot(c_list, svm_old_list, marker='x', mec='c', mfc='c', ms=7, label='SVM-EXP', color='c', linestyle='-')
plt.plot(c_list, knn_old_list, marker='+', mec='m', mfc='m', ms=7, label='kNN-EXP', color='m', linestyle='-.')
plt.legend(loc="lower right")  # 设置图例位置
plt.show()